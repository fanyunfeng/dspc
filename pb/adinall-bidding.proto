syntax = "proto2";

// 聚告PMP DSP接口
package adinall;

message BidRequest {

    //------------------------------------------- 协议基础信息

    // 当前协议版本号, 目前版本号为2
    required int32 version = 1;

    // 聚告PMP生成的唯一竞价ID, 32字节的字符串
    required string bid = 2;

    // 如果不为0, 那么这是一个测试请求
    // DSP需要返回一个正常填写的应答
    // 聚告PMP不会展现给用户, 且不会对该次请求计费
    optional uint32 is_test = 3 [default = 0];

    // 如果不为0, 那么这是一个ping请求
    // DSP需要返回一个空的应答
    optional uint32 is_ping = 4 [default = 0];

    //------------------------------------------- 浏览者信息

    // 用户的IP地址, ipv4
    // 例如：192.168.1.1
    // 当前用户的IP地址(如192.168.1.1)
    optional string ip = 5;

    // 用户的浏览器类型, 来源于 HTTP 请求头部的 User-Agent
    optional string user_agent = 6;

    // http 请求 header 中的 referer 信息
    optional string referer = 7;

    // 用户的默认系统语言
    optional string language = 8;

    // 用户的屏幕尺寸, 格式为“长 x 宽”, 例如1024x768
    optional string screen_size = 9;

    // 用户的浏览器flash版本, 0为未知
    optional int32 flash_version = 10 [default = 0]; 

    // 用户在聚告PMP平台中的唯一ID（当前Cookie的Visitor ID）
    optional string visitor_id = 11;

    // 用户的地理位置信息(国家,城市)
    optional string geo = 12;

    //------------------------------------------- 网页信息

    // 媒体域名
    optional string domain = 13;

    // 广告位所在的页面URL
    optional string url = 14;

    // 标识一个页面pv
    // 对于同一个页面的单个PV，聚告PMP会生成一个相同且唯一的page_session_id
    optional string page_session_id = 15;

    // 广告位所在媒体的分类
    // 参见数据字典 dict-site-category.txt
    repeated uint32 category = 16;

    // 媒体用户的人群标签
    // 参见数据字典 dict-user-segment.txt
    repeated string user_segment = 17;

    // 用户的内容标签
    // 参见数据字典 dict-content-tags.txt
    repeated string content_tags = 18;

    // 流量所属来源, 预留字段, 目前为0
    // adx type 0表示SSP流量
    optional uint32 adx_type = 19 [default = 0];

    //------------------------------------------- 广告位基础信息

    message AdInfo {
        // 媒体在聚告PMP中的唯一ID
        required string media_id = 1;

        // 当前页面广告位在聚告PMP中唯一的ID
        required uint32 adid = 2;

        // 媒体广告位在聚告PMP中的类型(1 - PC, 2 - WAP, 3 - APP)
        optional uint32 media_device = 3;

        // 广告位展现形式(1:固定, 3:弹窗)
        // 参见数据字典 dict-view-type.txt
        required uint32 view_type = 4;

        // 广告位的尺寸: 宽 x 高
        // 例如: 300x250
        required string size = 5;

        // 最低竞标价格，货币单位为人民币，数值含义为分/千次展现
        required uint32 min_cpm_price = 6;

        // 媒体禁止的敏感类目
        // 参见数据字典 dict-sensitive-category.txt
        repeated uint32 exclude_sensitive_category = 7;

        // 媒体禁止的目标主域名, 多个情况下以半角逗号分隔
        repeated string exclude_domain = 8;

        // 媒体禁止的DSP(buyer)买家ID
        repeated string exclude_buyer_id = 9;

        // 推广位在页面所在的屏数
        // 0: 未识别; 1-5: 第1-5屏; 6: 第六屏及以外
        enum ViewScreen {
            SCREEN_NA     = 0;
            SCREEN_FIRST  = 1;
            SCREEN_SECOND = 2;
            SCREEN_THIRD  = 3;
            SCREEN_FOURTH = 4;
            SCREEN_FIFTH  = 5;
            SCREEN_OTHER  = 6;
        }
        optional ViewScreen view_screen = 10;

        // 所属的交易类型(1:竞价, 2:固定价格)
        required uint32 transaction_type = 11;
    }
    repeated AdInfo adinfo = 20;

    message App {
        // 媒体投放广告类型
        //1：横幅；2：开屏；3：插屏；4：原生信息流
        required uint32 adtype = 1;

        message DeviceInfo {

            // 用户的设备系统类型
            // 1：安卓系统；2：ios系统; 3:未知; 4:window phone
            required uint32 os = 3;

            // 用户设备系统的版本号
            // 例如：7.0.2
            required string os_version = 4;

            // 用户设备运营商
            // 1：中国移动；2：中国联通；3：中国电信; 4:未知
            required uint32 carrier = 5;

            // 用户设备网络连接类型
            // 1：2g；2：3g；3：wifi；4：4g; 5：未识别；
            required uint32 conn = 6;

            // 用户设备屏幕的密度，预留字段
            // 千分位表示，默认1000
            optional uint32 density = 7;

            // 用户设备制造厂商
            // 例如：nokia, samsung
            required string brand = 8;

            // 用户设备型号
            // 例如：n70, galaxy
            required string model = 9;

            // 用户设备唯一标识
            // 对于android设备，该值是设备的imei加密后的值
            // 对于ios设备，该值是设备的idfa加密后的值
            required string device_id = 10;

            // 安卓设备的Android ID
            // 对于android设备，该值是设备的Android ID加密后的值
            // 对于ios设备，该值是设备的idfa加密后的值
            required string anid = 11;

            // 用户设备的mac地址
            // 对于ios(6.0及以上)设备，该值为idfa加密后的值
            // 对于ios(6.0以下)设备，该值为mac地址加密后的值
            // 对于android设备，该值为mac地址加密后值
            required string mac = 12;

            // 用户设备的屏幕宽度，以像素为单位
            required uint32 dvw = 13;

            // 用户设备的屏幕高度，以像素为单位
            required uint32 dvh = 14;

            // 用户的设备类型
            // 1：移动手机；2：平板电脑; 3:未知
            required uint32 devicetype = 15;

            // 用户设备的屏幕方向
            // 1：竖屏；2：横屏；3：未知；
            required uint32 orientation = 16;

            // 用户设备所在地理位置的经度（小数点格式）
            // 例如：116.41667
            optional string lon = 17;

            // 用户设备所在位置的经度（小数点格式）
            // 例如：39.91667
            optional string lat = 18;

            // 是否支持Javascript脚本(1：支持；2：不支持)
            optional uint32 js = 19;

            // 设备的语言设置，使用alpha-2/ISO 639-1
            optional string language = 20;
        }
        required DeviceInfo device = 2;

        message AppInfo {
            // APP的主包名
            // 例如：com.moji.MojiWeather
            required string pckname = 1;

            // 应用程序名称
            // 例如：陌陌
            // 先base64解码后再进行urldecode解码得到名称
            required string appname = 2;

            // 应用程序的类型ID
            // 参见数据字典 dict-app-category.txt
            required uint32 category_id = 3;
        }
        required AppInfo appinfo = 3;
    }
    optional App app = 22;

    message Deal {
        // 优先交易
        message PreferredDeal {
            required uint32 dealid = 1;
            // 允许的广告主白名单，不设置则默认所有均允许
            repeated uint32 advertiser_ids = 2;
            // 优先交易固定价格
            optional uint32 fix_cpm_price = 3;
        }
        optional PreferredDeal prefer_deal = 1;

        //私有竞价
        message PrivateAuction {
            required uint32 dealid = 1;
            // 购买的规则
            message BuyerRule {
                // 允许的广告主白名单，不设置则默认所有均允许
                repeated uint32 advertiser_ids = 1;
            
                // 私有竞价底价
                optional uint32 min_cpm_price = 2;
            }   
            repeated BuyerRule buyer_rules = 2;
        }   
        optional PrivateAuction priv_auc = 2;
    }
    // 所有该dsp参与的交易
    optional Deal deals = 23; 

    // 聚告WAP或APP端 H5扩展视频模式，WIFI情况下将自动播放，非WIFI情况下以常规广告内容填充
    message AdinallVideo {
        // 视频最长秒数，单位：秒
        required uint32 max_video_duration = 1;

        // 聚告视频格式, 目前默认mp4
        required string mime = 2;

        // 聚告视频尺寸比例, 例如：4:3或16:9
        required string size = 3;
    }
    optional AdinallVideo adinall_video = 24; 
}

message BidResponse {

    //------------------------------------------- 协议基础信息

    // 当前协议版本号，目前为2
    required int32 version = 1;

    // 请填充BidRequest中的bid, 32字节的字符串
    required string bid = 2;

    //------------------------------------------- 广告内容信息
    // 若DSP不对本次请求报价，则不要设置本字段
    message Ads {
        // 请填充BidRequest中的adid
        required uint32 adid = 1; 

        // 广告竞标价格（人民币）, 单位为分/千次展现
        // 该字段值不允许为0
        // 且不能低于推广位最低竞标价格（BidRequest.min_cpm_price）
        required uint32 max_cpm_price = 2;

        // 创意在DSP中的唯一ID, 仅收集(用于数据对比和创意审核)
        optional string creative_id = 3;

        // DSP声明的本次广告类型
        // 参见数据字典 dict-creative-type.txt
        required uint32 creative_type = 4;

        // DSP声明的本次广告所属的广告行业类目
        // 参见数据字典 dict-content-tags.txt 或 dict-app-content-tags.txt
        repeated uint32 category = 5;

        // 广告缩略图地址, 用于在聚告PMP统计分析
        optional string thumb_img_url = 6;

        // 广告 landing page 主域名
        optional string ad_domain = 7;

        // 广告代码HTML片段
        // 点击宏 %%AD_CLICK_URL%%
        // 聚告PMP会根据点击宏替换HTML片段中的内容，APP不建议使用改字段并请填充1
        // (例如: <a href="%%AD_CLICK_URL%%http://www.dsp.com/ad.html"><img src="http://www.dsp.com/ad.jpg" /></a> 替换为 <a href="http://cm.adinall.com/?dspid=123456&target=http://www.dsp.com/ad.html"><img src="http://www.dsp.com/ad.jpg" /></a>)
        // 价格宏，具体见开发文档
        required string html_snippet = 8;

        // DSP买家ID, 与BidRequest中exclude_buyer_id对应
        optional string buyer_id = 9;

        // 参与PMP竞价的id, 要和请求中Deal定义中的dealid一致
        // 如果不设置标识参与公开竞价
        optional uint32 dealid = 10;

        message App {
            // 广告物料地址，图片地址
            required string imgurl = 1;

            // 素材标题，仅适用于native广告
            // 一般10个汉字(20个字节)左右
            optional string title = 2;

            // 素材描述，仅适用于native广告
            // 一般20个汉字(40个字节)左右
            optional string desc = 3;

            // 数组，当广告展示的时候的反馈地址
            repeated string impressionreport = 4;

            // 数组，当广告点击的时候的反馈地址
            repeated string clickreport = 5;

            // 价格宏
            // %%AD_WIN_NOTICE%%
            // 聚告ssp会根据展示宏替换竞价胜出上报中的内容
            // 竞价胜出反馈地址,详细参见文档
            required string winnotice = 6;

            // 广告最终落地页地址
            optional string ldp = 7;
        }
        repeated App app = 11;

        // 聚告WAP、APP H5扩展视频物料对象
        message AdinallVideo {
            // 视频图片地址
            required string imgurl = 1;
            
            // 视频链接
            required string video_link = 2;

            // 数组，当广告展示的时候的反馈地址，支持价格宏
            repeated string impressionreport = 3;

            // 数组，当广告点击的时候的反馈地址
            repeated string clickreport = 4;

            // 广告最终落地页地址
            required string ldp = 7;
        }
        optional AdinallVideo adinall_video = 12;
    }
    repeated Ads ads = 3;
}